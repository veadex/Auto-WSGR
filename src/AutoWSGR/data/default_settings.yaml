# ========== 游戏设置 ==========
emulator:
  type: "雷电" # 模拟器类型
  #type: "蓝叠 Hyper-V" # 模拟器类型
  start_cmd: "E:/leidian/LDPlayer9/dnplayer.exe" # 模拟器启动命令
  #start_cmd: "C:/Program Files/BlueStacks_nxt/HD-Player.exe" # 模拟器启动命令
  #config_file: "E:/BlueStacks_nxt/bluestacks.conf"
  config_file: ""
  emulator_name: emulator-5554 # 雷电模拟器使用多开器请填写该项, 不多开默认为 "emulator-5554"

LOG_PATH: "log"
DELAY: 1.5

account:
password:

# ========== Logger设置 ==========
DEBUG: True          #是否开启调试模式，如果为 True，则会输出更多的调试信息。
SHOW_MAP_NODE: True      #是否显示地图节点信息。
SHOW_ANDROID_INPUT: True # 是否显示 Android 输入的信息。
SHOW_ENEMY_RULES: True #是否显示敌人规则信息。
SHOW_FIGHT_STAGE: True #是否显示战斗阶段信息。
SHOW_CHAPTER_INFO: True #是否显示章节信息。
SHOW_MATCH_FIGHT_STAGE: True #是否显示演习战斗阶段信息。
SHOW_DECISIVE_BATTLE_INFO: True #是否显示决战信息。
SHOW_OCR_INFO: True    #是否显示 OCR 识别信息。
log_level: DEBUG # 调试模式 log_level 应该设置为 DEBUGlog




# ========== 日常挂机策略设置 ==========

exercise_defaults:
  chapter: 'exercise' # 不要改动
  selected_nodes: [player, robot] # 不要改动
  discard: False # 是否丢弃演习奖励
  exercise_times: 5 # 最大玩家演习次数
  robot: True # 是否打机器人

proceed_stop: [2, 2, 2, 2, 2, 2] # 根据我方血量状态选择是否继续前进,一旦对应破损程度达到或超过该值则返回
                                         # [1,2,2,2,2,-1]: 旗舰中破回家, 2-5 号位大破回家,忽略 6 号位的状态

dock_full_destroy: False # 船坞已满时自动清空，若设置为false则船坞已满后终止所有常规出征任务

daily_automation:
  auto_expedition: True # 自动重复远征
  auto_set_support: True # 自动开启战役支援
  auto_gain_bonus: True # 当有任务完成时自动点击
  auto_bath_repair: True # 空闲时自动澡堂修理
  stop_maxship: True # 满500船时自动停止
  auto_battle: True # 自动打完每日战役次数
  battle_type: "困难战列" # 打哪个。可选名称参考"plans/battle/"

  auto_normal_fight: True               # 按自定义任务进行常规战
  normal_fight_tasks: # 自动出征任务用列表 [plan名，舰队号，目标成功次数] 表示，按顺序从上往下执行。plan名参考"plans/normal_fight/"
    - [8-2B, 3, 10]  #8-2练大船
    - [8-5AI-only1DD, 4, 3000]  #8-5练鱼 电表倒转
  #  - [9-1B-only5ss, 1, 100]  #9-1B炸鱼 只炸5ss的阵容
  #  - [9-1BF-only5ss, 1, 1000]  #9-1炸鱼顺带捞胖次
  #  - [9-2, 1, 470]
  #  - [2-1, 4, 100]

#数据信息设置
SHIP_NAME_PATH: ""  # 舰船名称列表路径, 如果缺省则默认为 [python packages 目录]/AutoWSGR/data/ship_names.txt
PLAN_ROOT: "" # 计划根目录, 如果缺省则默认为 [python packages 目录]/AutoWSGR/data/plans
